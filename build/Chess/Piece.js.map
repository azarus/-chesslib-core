{"version":3,"sources":["../../source/Chess/Piece.ts"],"names":[],"mappings":"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","file":"Piece.js","sourcesContent":["\r\n// Define Movement Vectors\r\nexport class MovementVectors\r\n{\r\n\tstatic Diagonal = [[1, 1], [1, -1], [-1, -1], [-1, 1]];\r\n\tstatic Lateral = [[0, 1], [0, -1], [1, 0], [-1, 0]];\r\n\tstatic Omni = MovementVectors.Diagonal.concat(MovementVectors.Lateral);\r\n};\r\n\r\n\r\nexport class COLORS \r\n{\r\n\tstatic BLACK = 0;\r\n\tstatic WHITE = 1;\r\n\tstatic GREEN = 2;\r\n\tstatic ORANGE = 3;\r\n\r\n\tstatic getColor(color)\r\n\t{\r\n\t\treturn COLORMAP[color];\r\n\t}\r\n\r\n\tstatic getName(color)\r\n\t{\r\n\t\tvar keys = Object.keys(COLORMAP);\r\n\t\tfor(var key of keys)\r\n\t\t{\r\n\t\t\tif(COLORMAP[key] == color)\r\n\t\t\t\treturn key;\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n};\r\n\r\nconst COLORMAP = {\r\n\tw: COLORS.WHITE,\r\n\tb: COLORS.BLACK,\r\n\tg: COLORS.GREEN,\r\n\to: COLORS.ORANGE\r\n};\r\n\r\n// Simploe Piece inmplementation\r\nexport class Piece\r\n{\r\n\t// Board & Square \r\n\tboard = null;\r\n\tsquare = null;\r\n\r\n\t// Piece description\r\n\tname = \"Piece\";\r\n\tcolor = null;\r\n\ttype = null;\r\n\r\n\t// Movement information\r\n\tmoves = 0;\r\n\r\n\tindex = null;\r\n\t\r\n\tpieceTimer = null;\r\n\r\n\tlastMoved = 0;\r\n\r\n\tconstructor(board, square)\r\n\t{\r\n\t\tthis.board = board;\r\n\t\tthis.setSquare(square);\r\n\t}\r\n\r\n\tinitialize()\r\n\t{\r\n\t\t// Not implemented\r\n\t}\r\n\r\n\tsetSquare(square)\r\n\t{\r\n\t\tif(this.square)\r\n\t\t{\r\n\t\t\tthis.square.piece = null;\r\n\t\t}\r\n\r\n\t\tif(square)\r\n\t\t{\r\n\t\t\tsquare.piece = this;\r\n\t\t}\r\n\r\n\t\tthis.square = square;\r\n\t}\r\n\r\n\tsetColor(color)\r\n\t{\r\n\t\tthis.color = color;\r\n\t}\r\n\r\n\tgetColor()\r\n\t{\r\n\t\treturn this.color;\r\n\t}\r\n\r\n\t// Moves piece to a new square\r\n\tmove(square)\r\n\t{\r\n\t\tif(!square)\r\n\t\t\treturn false;\r\n\t\r\n\r\n\t\t// If square has piece capture it.\r\n\t\tthis.capture(square);\r\n\r\n\t\tthis.addHistory({\r\n\t\t\tmove: {\r\n\t\t\t\tfrom: this.square,\r\n\t\t\t\tto: square,\r\n\t\t\t},\r\n\t\t\tlastMoved: this.lastMoved\r\n\t\t});\r\n\r\n\t\t// Change positions\r\n\t\tthis.moves++;\r\n\r\n\t\t// Clear previous square\r\n\t\tthis.square.setPiece(null);\r\n\r\n\t\t// set new position\r\n\t\tthis.setSquare(square);\r\n\t\tthis.lastMoved = Date.now();\r\n\t\treturn true;\r\n\t}\r\n\r\n\tundo(event)\r\n\t{\r\n\t\tif(event.move)\r\n\t\t{\r\n\t\t\tthis.square.setPiece(null);\r\n\t\t\tthis.setSquare(event.move.from);\r\n\t\t\tthis.lastMoved = event.lastMoved;\r\n\t\t\tthis.moves--;\r\n\t\t}\r\n\r\n\t\tif(event.captured)\r\n\t\t{\r\n\t\t\tevent.square.setPiece(event.captured);\r\n\t\t}\r\n\t}\r\n\t\r\n\tcapture(square)\r\n\t{\r\n\t\tif(!square)\r\n\t\t\treturn;\r\n\t\r\n\t\tif(square.piece)\r\n\t\t{\r\n\t\t\t// Add capture to the history\r\n\t\t\tthis.addHistory({\r\n\t\t\t\tcaptured: square.piece,\r\n\t\t\t\tsquare: square,\r\n\t\t\t});\r\n\t\t}\r\n\t\t\t\r\n\t\tsquare.setPiece(null);\r\n\r\n\t}\r\n\r\n\tgetAllowedMoves()\r\n\t{\r\n\t\t// if(this.lastMoved > Date.now() - this.moveDelay)\r\n\t\t// \treturn [];\r\n\t\treturn this.getLegalMoves();\r\n\t}\r\n\r\n\tgetLegalMoves()\r\n\t{\r\n        return this.getMoves().filter((square) => {\r\n\t\t\tif(square.piece && square.piece.color == this.color)\r\n\t\t\t\treturn false;\r\n\r\n\t\t\treturn true;\r\n\t\t});\r\n\t}\r\n\r\n\tgetMoves(): any[]\r\n\t{\r\n\t\tthrow new Error(\"Not implemented\");\r\n\t}\r\n\r\n\tgetMovesByVectors(vectors, limit=undefined)\r\n\t{\r\n\t\tvar moves = [], steps, vector, square;\r\n\r\n\t\tfor(var i = 0, l = vectors.length; i < l; i++)\r\n\t\t{\r\n\t\t\tsteps = 0;\r\n\t\t\tvector = vectors[i];\r\n\t\t\tsquare = this.square;\r\n\r\n\t\t\t// Add all squares in path\r\n\t\t\twhile (square = square.getSibling(vector[0], vector[1]))\r\n\t\t\t{\r\n\t\t\t\tif (square.getPiece())\r\n\t\t\t\t{\r\n\t\t\t\t\t// Square is occupied by opponent\r\n\t\t\t\t\tif (square.getPiece().color != this.color)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// Occupied by other player - piece can be captured\r\n\t\t\t\t\t\tmoves.push(square);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmoves.push(square);\r\n\t\t\t\tsteps++;\r\n\r\n\t\t\t\t// Check if steps limit exceeded\r\n\t\t\t\tif (limit && steps >= limit)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn moves;\r\n\t}\r\n    \r\n    getSymbol()\r\n\t{\r\n\t\treturn COLORS.getName(this.color) + this.type;\r\n\t}\r\n\r\n\tBeforePieceMoved(piece, square)\r\n\t{\r\n\t\t// Not implemented\r\n\t}\r\n\r\n\tAfterPieceMoved(piece, square)\r\n\t{\r\n\t\t// Not implemented\r\n\t}\r\n\r\n\taddHistory(data)\r\n\t{\r\n\t\tthis.board.addHistory(this, data);\r\n\t}\r\n};"]}