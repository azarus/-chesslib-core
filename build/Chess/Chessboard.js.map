{"version":3,"sources":["../../source/Chess/Chessboard.ts"],"names":[],"mappings":"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","file":"Chessboard.js","sourcesContent":["import { Square } from \"./Square\";\r\nimport { Piece, COLORS } from \"./Piece\";\r\n\r\n// Pieces\r\nimport { PawnPiece } from \"./Pieces/Pawn\";\r\nimport { BishopPiece } from \"./Pieces/Bishop\";\r\nimport { KnightPiece } from \"./Pieces/Knight\";\r\nimport { RookPiece } from \"./Pieces/Rook\";\r\nimport { QueenPiece } from \"./Pieces/Queen\";\r\nimport { KingPiece } from \"./Pieces/King\";\r\n\r\n// Events\r\nimport { ChessMoveEvent, ChessPromoteEvent } from \"./Events\";\r\n\r\n// Third Party\r\nimport { ChessEventEmitter, ChessEvent } from \"./Utils\";\r\nimport { Positions } from \"./Positions\";\r\n\r\nexport class Chessboard\r\n{\r\n\tstatic SIDE = \"abcdefghijklmnopqrstuvwxyz\";\r\n\r\n\tstatic RANKS = [\"Pawn\", \"Knight\", \"Bishop\", \"Rook\", \"Queen\", \"King\"];\r\n\tstatic PIECES = {\r\n\t\tP: PawnPiece,\r\n\t\tB: BishopPiece,\r\n\t\tN: KnightPiece,\r\n\t\tR: RookPiece,\r\n\t\tQ: QueenPiece,\r\n\t\tK: KingPiece,\r\n\t};\r\n\r\n\tboardSize = {\r\n\t\tx: 8,\r\n\t\ty: 8,\r\n\t};\r\n\r\n\thistory = [];\r\n\r\n\tsquares = new Array();\r\n\r\n\tonPromote = new ChessEventEmitter();\r\n\t\r\n\tconstructor(sizeX=8, sizeY=8)\r\n\t{\r\n\t\t\r\n\t\tthis.boardSize.x = sizeX;\r\n\t\tthis.boardSize.y = sizeY;\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\tstatic fromPosition(position)\r\n\t{\r\n\t\tvar sizeY = position.length;\r\n\t\tvar sizeX = position[0].length;\r\n\t\tlet board = new Chessboard(sizeX, sizeY);\r\n\t\tboard.loadPositions(position);\r\n\t\treturn board;\r\n\t}\r\n\r\n\tclone()\r\n\t{\r\n\t\treturn Chessboard.fromPosition(this.savePositions());\r\n\t}\r\n\r\n\treset()\r\n\t{\r\n\t\tthis.squares = new Array();\r\n\t\tfor(var y=0;y<this.boardSize.y;++y)\r\n\t\t{\r\n\t\t\tthis.squares[y] = new Array();\r\n\t\t\tfor(var x=0;x<this.boardSize.x;++x)\r\n\t\t\t{\r\n\t\t\t\tthis.squares[y][x] = new Square(this, x, y);\r\n\t\t\t}\t\r\n\t\t}\r\n\t\tthis.history = [];\r\n\t}\r\n\r\n\tforEach(callback)\r\n\t{\r\n\t\tfor(var y=0;y<this.boardSize.y;++y)\r\n\t\t{\r\n\t\t\tfor(var x=0;x<this.boardSize.x;++x)\r\n\t\t\t{\r\n\t\t\t\tcallback(this.squares[y][x], x, y);\r\n\t\t\t}\t\r\n\t\t}\r\n\t}\r\n\r\n\tforEachPiece(callback)\r\n\t{\r\n\t\tthis.forEach( (square, x, y) => {\r\n\t\t\tif(square.piece)\r\n\t\t\t{\r\n\t\t\t\tcallback(square.piece, x, y, square);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfindPieces(pieceType=null, color=null)\r\n\t{\r\n\t\tvar pieces = [];\r\n\t\tthis.forEachPiece( piece => {\r\n\t\t\tif(pieceType && piece.type != pieceType)\r\n\t\t\t\treturn \r\n\r\n\t\t\tif(color && piece.color != color)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tpieces.push(piece);\r\n\t\t\r\n\t\t});\r\n\r\n\t\treturn pieces;\r\n\t}\r\n\r\n\tmap(callback)\r\n\t{\r\n\t\tlet newSquares = new Array();\r\n\t\tfor(var y=0;y<this.boardSize.y;++y)\r\n\t\t{\r\n\t\t\tnewSquares[y] = new Array();\r\n\t\t\tfor(var x=0;x<this.boardSize.x;++x)\r\n\t\t\t{\r\n\t\t\t\tnewSquares[y][x] = callback(this.squares[y][x], x, y);\r\n\t\t\t}\t\r\n\t\t}\r\n\t\treturn newSquares;\r\n\t}\r\n\r\n\tloadPositions(positions)\r\n\t{\r\n\t\tthis.reset();\r\n\r\n\t\tif(positions.length > this.boardSize.y || positions[0].length > this.boardSize.x)\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor(var y = 0;y<positions.length;++y)\r\n\t\t{\r\n\t\t\tfor(var x = 0;x<positions[y].length;++x)\r\n\t\t\t{\r\n\t\t\t\tvar square = this.getSquare(x, y);\r\n\t\t\t\tthis.setSquare(square, positions[y][x][1], COLORS.getColor(positions[y][x][0]));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tsavePositions()\r\n\t{\r\n\t\tvar positions = [];\r\n\t\tfor(var y=0;y<this.boardSize.y;++y)\r\n\t\t{\r\n\t\t\tpositions[y] = [];\r\n\t\t\tfor(var x=0;x<this.boardSize.x;++x)\r\n\t\t\t{\r\n\t\t\t\tif(this.squares[y][x].piece)\r\n\t\t\t\t{\r\n\t\t\t\t\tpositions[y][x] = COLORS.getName(this.squares[y][x].piece.color) + this.squares[y][x].piece.type;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tpositions[y][x] = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn positions;\r\n\t}\r\n\r\n\tsetBoard(board)\r\n\t{\r\n\t\tthis.reset();\r\n\t\tvar keys = Object.keys(board);\r\n\t\tfor(var key of keys)\r\n\t\t{\r\n\t\t\tvar square = this.FENToSquare(key);\r\n\t\t\tif(!square)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tvar color = board[key][0];\r\n\t\t\tvar piece = board[key][1];\r\n\t\t\tthis.setSquare(square, piece, COLORS.getColor(color));\r\n\t\t}\r\n\t}\r\n\r\n\tgetBoard()\r\n\t{\r\n\t\tvar positions = {};\r\n\t\tthis.forEach( square => {\r\n\t\t\tif(square.piece)\r\n\t\t\t{\r\n\t\t\t\tpositions[this.SquareToFEN(square)] = square.piece.getSymbol();\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn positions;\r\n\t}\r\n\t\r\n\t\r\n\tgetSquare(x, y)\r\n\t{\r\n\t\tif(x >= (this.boardSize.x) || x < 0 || y >= (this.boardSize.y) || y < 0)\r\n\t\t\treturn null;\r\n\t\treturn this.squares[y][x];\r\n\t}\r\n\r\n\tsetSquare(square, type, color)\r\n\t{\r\n\t\tif(!square)\r\n\t\t\treturn null;\r\n\r\n\t\tif(!type)\r\n\t\t\treturn this.clearSquare(square);\r\n\t\t\r\n\t\tif(!Chessboard.PIECES[type])\r\n\t\t\treturn null;\r\n\r\n\t\treturn this.createPiece(type, color, square);\r\n\t}\r\n\r\n\tcreatePiece(type, color, square)\r\n\t{\r\n\t\tlet newPiece = new Chessboard.PIECES[type](this, square);\r\n\t\tnewPiece.setColor(color);\r\n\t\tnewPiece.initialize();\r\n\t\treturn newPiece;\r\n\t}\r\n\r\n\tsetPiece(square, piece)\r\n\t{\r\n\t\tif(!square)\r\n\t\t\treturn false;\r\n\t\t\r\n\t\t// Remove the old piece from the square\r\n\t\tif(square.piece)\r\n\t\t{\r\n\t\t\tsquare.piece.square = null;\r\n\t\t}\r\n\r\n\t\t// Set the new piece\r\n\t\tsquare.piece = piece;\r\n\t\tif(piece)\r\n\t\t{\r\n\t\t\tpiece.square = square;\r\n\t\t}\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\r\n\tclearSquare(square)\r\n\t{\r\n\t\tif(square.piece)\r\n\t\t{\r\n\t\t\tsquare.piece.setSquare(null);\r\n\t\t\tsquare.setPiece(null);\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\tisValidMoveFEN(from, to)\r\n\t{\r\n\t\tvar fromSquare = this.FENToSquare(from);\r\n\t\tvar toSquare = this.FENToSquare(to);\r\n\t\treturn this.isValidMove(fromSquare, toSquare);\r\n\t}\r\n\r\n\tisValidMove(from, to)\r\n\t{\r\n\t\tif(!from || !to)\r\n\t\t\treturn false;\r\n\t\t\r\n\t\tif(!from.piece)\r\n\t\t\treturn false;\r\n\t\t\r\n\t\treturn !!this.getAllowedMovesOf(from.piece).find( move=> {\r\n\t\t\t\r\n\t\t\tif(from == move.from && to == move.to)\r\n\t\t\t\treturn true;\r\n\t\t\treturn false;\r\n\t\t});\r\n\t\t\r\n\t}\r\n\r\n\tdoMove(move)\r\n\t{\r\n\t\tthis.move(move.from, move.to);\r\n\t}\r\n\r\n\tdoMoveFEN(move)\r\n\t{\r\n\t\tthis.tryMoveFEN(move.from, move.to)\r\n\t}\r\n\t\r\n\tmove(from, to, simulatedMove=false)\r\n\t{\r\n\t\tif(!from || !to)\r\n\t\t\treturn false;\r\n\t\t\r\n\t\r\n\t\tif(!from.piece)\r\n\t\t\treturn false;\r\n\t\t\r\n\t\tvar movingPiece = from.piece;\r\n\r\n\t\t// Add the move to the history\r\n\t\tthis.history.push([]);\r\n\t\r\n\t\t// this.forEachPiece( piece => {\r\n\t\t// \tpiece.BeforePieceMoved(movingPiece, to);\r\n\t\t// });\r\n\t\r\n\t\tvar result = movingPiece.move(to);\r\n\t\t\r\n\t\t// this.forEachPiece( piece => {\r\n\t\t// \tpiece.AfterPieceMoved(movingPiece, to);\r\n\t\t// });\r\n\t\t\r\n\t\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\taddHistory(piece, data)\r\n\t{\r\n\t\tvar history = {\r\n\t\t\tpiece: piece,\r\n\t\t\tdata: data,\r\n\t\t};\r\n\r\n\t\tthis.history[this.history.length-1].push(history);\r\n\t}\r\n\r\n\t// pushHistory(piece, data)\r\n\t// {\r\n\t// \tvar historyEvent = {\r\n\t// \t\tpiece: piece,\r\n\t// \t\ttype: type,\r\n\t// \t\tdata: data,\r\n\t// \t};\r\n\t\t\r\n\t// \tthis.history[this.history.length - 1].push(historyEvent);\r\n\t// }\r\n\r\n\t// popHistory()\r\n\t// {\r\n\t// \tvar history = this.history.pop()\r\n\t// \thistory.piece.undo(history.data);\r\n\t// \treturn history;\r\n\t// }\r\n\t\r\n\t// newHistory()\r\n\t// {\r\n\t// \tthis.history.push([]);\r\n\t// }\r\n\r\n\t// Undo the last actions.\r\n\tundo()\r\n\t{\r\n\t\tvar history = this.history.pop();\r\n\t\tif(!history)\r\n\t\t{\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tvar historySize = history.length;\r\n\t\tfor(var i=0;i<historySize;++i)\r\n\t\t{\r\n\t\t\tvar event = history.pop();\r\n\t\t\tevent.piece.undo(event.data);\r\n\t\t}\r\n\t\treturn history;\r\n\t}\r\n\r\n\tmoveFEN(from, to, simulatedMove = false)\r\n\t{\r\n\t\tvar fromSquare = this.FENToSquare(from);\r\n\t\tvar toSquare = this.FENToSquare(to);\r\n\t\treturn this.move(fromSquare, toSquare, simulatedMove);\r\n\t}\r\n\r\n\ttryMove(from, to, simulatedMove = false)\r\n\t{\r\n\t\tif(!this.isValidMove(from, to))\r\n\t\t\treturn false;\r\n\t\treturn this.move(from, to, simulatedMove);\r\n\t}\r\n\r\n\ttryMoveFEN(from, to, simulatedMove = false)\r\n\t{\r\n\t\tvar fromSquare = this.FENToSquare(from);\r\n\t\tvar toSquare = this.FENToSquare(to);\r\n\t\t\r\n\t\tif(!this.isValidMove(fromSquare, toSquare))\r\n\t\t{\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn this.move(fromSquare, toSquare, simulatedMove);\r\n\t}\r\n\r\n\tgetAllowedMovesOf(piece)\r\n\t{\r\n\t\treturn piece.getAllowedMoves().map( toSquare => {\r\n\t\t\treturn {\r\n\t\t\t\tfrom: piece.square,\r\n\t\t\t\tto: toSquare,\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\tgetMovesOf(piece)\r\n\t{\r\n\t\treturn piece.getLegalMoves().map( toSquare => {\r\n\t\t\treturn {\r\n\t\t\t\tfrom: piece.square,\r\n\t\t\t\tto: toSquare,\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\t\r\n\tgetMovesAtFEN(fen)\r\n\t{\r\n\t\tvar square = this.FENToSquare(fen);\r\n\t\tif(square && square.piece)\r\n\t\t{\r\n\t\t\treturn this.getAllowedMovesOf(square.piece);\r\n\t\t}\r\n\t\treturn [];\r\n\t}\r\n\r\n\tgetFENMovesatFEN(fen)\r\n\t{\r\n\t\treturn this.getMovesAtFEN(fen).map( ( move ) => {\r\n\t\t\tmove.from = this.PositionToFEN(move.from.x, move.from.y);\r\n\t\t\tmove.to = this.PositionToFEN(move.to.x, move.to.y);\r\n\t\t\treturn move;\r\n\t\t});\r\n\t}\r\n\t\r\n\tgetMoves(color=null)\r\n\t{\r\n\t\tlet moves = [];\r\n\t\tthis.forEachPiece( (piece) => {\r\n\t\t\t\r\n\t\t\tif(color !== null && color != piece.color)\r\n\t\t\t{\r\n\t\t\t\t//console.log(\"not same color?\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tmoves.push.apply(moves, this.getAllowedMovesOf(piece));\r\n\t\t});\r\n\t\treturn moves;\r\n\t}\r\n\r\n\tgetMovesFEN(color=null)\r\n\t{\r\n\t\treturn this.getMoves(color).map( ( move ) => {\r\n\t\t\tmove.from = this.PositionToFEN(move.from.x, move.from.y);\r\n\t\t\tmove.to = this.PositionToFEN(move.to.x, move.to.y);\r\n\t\t\treturn move;\r\n\t\t});\r\n\t}\r\n\t\r\n\tPositionToFEN(x, y)\r\n\t{\r\n\t\treturn this.charIndex(x) + (this.boardSize.y - y);\r\n\t}\r\n\r\n\tFENtoPosition(fen)\r\n\t{\r\n\t\treturn {\r\n\t\t\tx: this.indexOfChar( fen[0] ),\r\n\t\t\ty: (this.boardSize.y - fen[1])\r\n\t\t};\r\n\t}\r\n\r\n\tFENToSquare(fen)\r\n\t{\r\n\t\tvar position = this.FENtoPosition(fen);\r\n\t\treturn this.getSquare(position.x, position.y);\r\n\t}\r\n\r\n\tSquareToFEN(square)\r\n\t{\r\n\t\tvar position = square.getPosition();\r\n\t\treturn this.PositionToFEN(position.x, position.y);\r\n\t}\r\n\r\n\tcharIndex(index)\r\n\t{\r\n\t\treturn Chessboard.SIDE[index];\r\n\t}\r\n\r\n\tindexOfChar(char)\r\n\t{\r\n\t\treturn Chessboard.SIDE.indexOf(char);\r\n\t}\r\n\r\n\tclearDebug()\r\n\t{\r\n\t\tthis.forEach( square => {\r\n\t\t\tsquare.debug = false;\r\n\t\t})\r\n\t}\r\n\r\n\tdebugSquare(square, debugColor)\r\n\t{\r\n\t\tsquare.debug = debugColor;\r\n\t}\r\n\r\n\tdebugFEN(fen, debugColor)\r\n\t{\r\n\t\tvar square = this.FENToSquare(fen);\r\n\t\tif(square)\r\n\t\t{\r\n\t\t\tsquare.debug = debugColor;\r\n\t\t}\r\n\t}\r\n\r\n\tdebugMoves(fen, debugColor)\r\n\t{\r\n\t\tvar square = this.FENToSquare(fen);\r\n\t\tif(square && square.piece)\r\n\t\t{\r\n\t\t\tvar piece = square.getPiece();\r\n\t\t\tvar moves = piece.getLegalMoves();\r\n\t\t\tmoves.forEach( square => {\r\n\t\t\t\tsquare.debug = debugColor;\r\n\t\t\t});\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n};\r\n"]}