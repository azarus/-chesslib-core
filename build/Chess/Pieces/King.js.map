{"version":3,"sources":["../../source/Chess/Pieces/King.ts"],"names":[],"mappings":"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","file":"King.js","sourcesContent":["import { Piece, MovementVectors } from \"../Piece\";\r\n\r\nexport class KingPiece extends Piece\r\n{\r\n\tname = \"King\";\r\n\ttype = \"K\";\r\n\t\r\n\r\n\tmove(square)\r\n\t{\r\n\t\tif(Math.abs(square.getPosition().x - this.square.getPosition().x) > 1)\r\n\t\t{\r\n\t\t\t// Castle Left rook\r\n\t\t\tif(square.getPosition().x - this.square.getPosition().x < 0)\r\n\t\t\t{\r\n\t\t\t\treturn this.castle(-4, -1, -2);\r\n\t\t\t}\r\n\r\n\t\t\t// Castle Right rook\r\n\t\t\tif(square.getPosition().x - this.square.getPosition().x > 0)\r\n\t\t\t{\r\n\t\t\t\treturn this.castle(3, 1, 2);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(!super.move(square))\r\n\t\t\treturn false;\r\n\t\t\r\n\t\t\r\n\t\treturn true;\r\n\t}\r\n\r\n\tgetMoves()\r\n\t{\r\n\t\treturn this.getCastlingMoves([[-1, 0, 4], [1, 0, 3]], 2, 'R');\r\n\t}\r\n\r\n\tgetCastlingMoves(vectors, distance, castlingPieceType)\r\n\t{\r\n\t\tvar moves = this.getMovesByVectors(MovementVectors.Omni, 1);\r\n\t\t\r\n\t\tif(this.moves > 0)\r\n\t\t\treturn moves;\r\n\r\n\t\tvar steps, vector, square;\r\n\t\tfor(var i = 0, l = vectors.length; i < l; i++)\r\n\t\t{\r\n\t\t\tsteps = 0;\r\n\t\t\tvector = vectors[i];\r\n\t\t\tsquare = this.square;\r\n\r\n\t\t\t// Check if the castling piece is available\r\n\t\t\tvar castlingTarget = this.square.getSibling(vector[0] * vector[2], vector[1] * vector[2]);\r\n\t\t\tif(castlingTarget && castlingTarget.piece && castlingTarget.piece.type == castlingPieceType && castlingTarget.piece.color == this.color && castlingTarget.piece.moves == 0)\r\n\t\t\t{\r\n\t\t\t\t// Add all squares in path\r\n\t\t\t\twhile (square = square.getSibling(vector[0], vector[1]))\r\n\t\t\t\t{\r\n\t\t\t\t\t// Square is occupied\r\n\t\t\t\t\tif (square.getPiece())\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tmoves.push(square);\r\n\t\t\t\t\tsteps++;\r\n\r\n\t\t\t\t\t// Check if steps limit exceeded\r\n\t\t\t\t\tif (distance && steps >= distance)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn moves;\r\n\t}\r\n\r\n\tcastle(rookPosition, kingPosition, castlePosition)\r\n\t{\r\n\t\tvar rookSquare = this.square.getSibling(rookPosition, 0);\r\n\t\tvar kingSquare = this.square.getSibling(kingPosition, 0);\t\t\r\n\t\tvar castlingSquare = this.square.getSibling(castlePosition, 0);\r\n\r\n\t\t// this.addHistory({\r\n\t\t// \tcastling: {\r\n\t\t// \t\trookSquare: rookSquare,\r\n\t\t// \t\tkingSquare: kingSquare,\r\n\t\t// \t\tcastlingSquare: castlingSquare,\r\n\t\t// \t},\r\n\t\t// \tcastling: this.canCastle,\r\n\t\t// });\r\n\t\t//this.setCastling(rookSquare, kingSquare, current, castlingSquare);\r\n\t\trookSquare.piece.move(kingSquare);\r\n\t\t\r\n\t\treturn super.move(castlingSquare);\r\n\t}\r\n\t\r\n\t// setCastling(from, to, castledFrom, castledTo)\r\n\t// {\r\n\t// \tthis.castling = {\r\n\t// \t\tcastlingfrom: from,\r\n\t// \t\tcastlingTo: to,\r\n\t// \t\tcastledPiece: this,\r\n\t// \t\tcastledFrom: castledFrom,\r\n\t// \t\tcastledTo: castledTo,\r\n\t// \t};\r\n\t// }\r\n};"]}